####################################################################
# VSTS Build Configuration, Version 1.4
#
# (c)2021 superdev GmbH
####################################################################

name: $[format('{0}', variables['buildName'])]

pool:
  vmImage: 'windows-2019'

trigger:
  branches:
    include:
    - master
    - develop
    - release/*
    - feature/*
    - bugfix/*

  paths:
    exclude:
    - README.md
    - Images/*
    - Samples/*

variables:
  solution: 'NuGetUtils.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion: 2
  minorVersion: 0
  patchVersion: 0
  version: $[format('{0}.{1}.{2}', variables.majorVersion, variables.minorVersion, variables.patchVersion)]
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    # Versioning: 1.0.0
    semVersion: $[format('{0}', variables.version)]
  ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    # Versioning: 1.0.0-pre.123
    semVersionBase: $[format('{0}-pre', variables.version)]
    semVersionRev: $[counter(variables.semVersionBase, 0)]
    semVersion: $[format('{0}.{1}', variables.semVersionBase, variables.semVersionRev)]
  buildName: $[format('{0}', variables.semVersion)]

steps:
- task: Bash@3
  displayName: 'Print all variables'
  inputs:
    targetType: 'inline'
    script: 'env | sort'
   
- task: Assembly-Info-NetCore@2
  displayName: 'Update Assembly Info'
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: |
      **/*.csproj
    InsertAttributes: true
    FileEncoding: 'auto'
    WriteBOM: false
    Product: 'NuGetUtils'
    Description: ''
    Company: 'superdev GmbH'
    Copyright: '(c) $(date:YYYY) superdev GmbH'
    VersionNumber: '$(Build.BuildNumber)'
    FileVersionNumber: '$(Build.BuildNumber)'
    InformationalVersion: '$(Build.BuildNumber)'
    PackageVersion: '$(Build.BuildNumber)'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: false'


- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 5.x'
  inputs:
    versionSpec: 5.x

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: ''
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: 'Run UnitTests'
  inputs:
    command: test
    projects: '**/*.Tests.csproj'
    arguments: '--no-restore --no-build --configuration $(buildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: 'Pack NuGetUtils'
  inputs:
    command: pack
    packagesToPack: NuGetUtils/NuGetUtils.csproj
    versioningScheme: byEnvVar
    versionEnvVar: semVersion

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGetUtils.CLI'
  inputs:
    command: pack
    packagesToPack: NuGetUtils.CLI/NuGetUtils.CLI.csproj
    versioningScheme: byEnvVar
    versionEnvVar: semVersion

- task: CmdLine@2
  displayName: 'Publish Single File App: NuGetUtils.CLI'
  inputs:
    script: |
      dotnet publish NuGetUtils.CLI/NuGetUtils.CLI.csproj -r win10-x64 --self-contained=false /p:Configuration=$(BuildConfiguration) /p:PublishSingleFile=true /p:PublishDir=bin\Release\net5.0\publish\

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'

    Contents: |
     **\bin\$(BuildConfiguration)\**
     **\bin\*.nupkg

    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
